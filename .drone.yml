---
kind: pipeline
type: docker
name: alpine

steps:
  - name: docker
    image: docker:dind
    privileged: true
    detach: true
    command: [ "dockerd", "--host=tcp://0.0.0.0:2375" ]

  - name: test
    image: ezkrg/buildx:latest
    environment:
      USER:
        from_secret: DHU
      PASSWORD:
        from_secret: DHP
      DOCKER_HOST: tcp://docker:2375
    commands:
    - while ! docker info; do sleep 1; done
    - docker buildx create --use --name docker --node docker --platform linux/amd64 --driver docker-container $DOCKER_HOST
    - echo $PASSWORD | docker login --username $USER --password-stdin
    - apk add --update --no-cache bash
    - BUILD_ARGS=$(for BUILD_ARG in $(cat plugin_versions); do echo -n "--build-arg $BUILD_ARG "; done)
    - docker buildx build --push --cache-from ezkrg/bitlbee-libpurple:cache --cache-to ezkrg/bitlbee-libpurple:cache --tag ezkrg/bitlbee-libpurple:test --platform linux/amd64 --build-arg ALPINE_VERSION=3.15 $BUILD_ARGS .
    when:
      event:
      - push

  - name: latest
    image: ezkrg/buildx:latest
    environment:
      USER:
        from_secret: DHU
      PASSWORD:
        from_secret: DHP
      DOCKER_HOST: tcp://docker:2375
    commands:
    - while ! docker info; do sleep 1; done
    - docker buildx create --use --name docker --node docker --platform linux/amd64 --driver docker-container $DOCKER_HOST
    - echo $PASSWORD | docker login --username $USER --password-stdin
    - apk add --update --no-cache bash
    - BUILD_ARGS=$(for BUILD_ARG in $(cat plugin_versions); do echo -n "--build-arg $BUILD_ARG "; done)
    - docker buildx build --push --cache-from ezkrg/bitlbee-libpurple:cache --cache-to ezkrg/bitlbee-libpurple:cache --tag ezkrg/bitlbee-libpurple:$DRONE_TAG --tag ezkrg/bitlbee-libpurple:latest --tag ezkrg/bitlbee-libpurple:alpine --platform linux/amd64 --build-arg ALPINE_VERSION=3.15 $BUILD_ARGS .
    when:
      event:
      - tag

---
kind: pipeline
type: docker
name: alpine3.12

steps:
  - name: docker
    image: docker:dind
    privileged: true
    detach: true
    command: [ "dockerd", "--host=tcp://0.0.0.0:2375" ]

  - name: test
    image: ezkrg/buildx:latest
    environment:
      USER:
        from_secret: DHU
      PASSWORD:
        from_secret: DHP
      DOCKER_HOST: tcp://docker:2375
    commands:
    - while ! docker info; do sleep 1; done
    - docker buildx create --use --name docker --node docker --platform linux/amd64 --driver docker-container $DOCKER_HOST
    - echo $PASSWORD | docker login --username $USER --password-stdin
    - apk add --update --no-cache bash
    - BUILD_ARGS=$(for BUILD_ARG in $(cat plugin_versions); do echo -n "--build-arg $BUILD_ARG "; done)
    - docker buildx build --push --cache-from ezkrg/bitlbee-libpurple:alpine3.12-cache --cache-to ezkrg/bitlbee-libpurple:alpine3.12-cache --tag ezkrg/bitlbee-libpurple:alpine3.12-test --platform linux/amd64,linux/arm64,linux/armhf --build-arg ALPINE_VERSION=3.12 $BUILD_ARGS .
    when:
      event:
      - push

  - name: latest
    image: ezkrg/buildx:latest
    environment:
      USER:
        from_secret: DHU
      PASSWORD:
        from_secret: DHP
      DOCKER_HOST: tcp://docker:2375
    commands:
    - while ! docker info; do sleep 1; done
    - docker buildx create --use --name docker --node docker --platform linux/amd64 --driver docker-container $DOCKER_HOST
    - echo $PASSWORD | docker login --username $USER --password-stdin
    - apk add --update --no-cache bash
    - BUILD_ARGS=$(for BUILD_ARG in $(cat plugin_versions); do echo -n "--build-arg $BUILD_ARG "; done)
    - docker buildx build --push --cache-from ezkrg/bitlbee-libpurple:alpine3.12-cache --cache-to ezkrg/bitlbee-libpurple:alpine3.12-cache --tag ezkrg/bitlbee-libpurple:alpine3.12-$DRONE_TAG --tag ezkrg/bitlbee-libpurple:alpine3.12 --platform linux/amd64,linux/arm64,linux/armhf --build-arg ALPINE_VERSION=3.12 $BUILD_ARGS .
    when:
      event:
      - tag

---
kind: pipeline
type: docker
name: debian

steps:
  - name: docker
    image: docker:dind
    privileged: true
    detach: true
    command: [ "dockerd", "--host=tcp://0.0.0.0:2375" ]


  - name: test
    image: ezkrg/buildx:latest
    environment:
      USER:
        from_secret: DHU
      PASSWORD:
        from_secret: DHP
      DOCKER_HOST: tcp://docker:2375
    commands:
    - while ! docker info; do sleep 1; done
    - docker run --rm --privileged tonistiigi/binfmt --install all
    - docker buildx create --use --name docker --node docker --platform linux/amd64,linux/arm64,linux/armhf --driver docker-container $DOCKER_HOST
    - echo $PASSWORD | docker login --username $USER --password-stdin
    - apk add --update --no-cache bash
    - BUILD_ARGS=$(for BUILD_ARG in $(cat plugin_versions); do echo -n "--build-arg $BUILD_ARG "; done)
    - docker buildx build --push --cache-from ezkrg/bitlbee-libpurple:debian-cache --cache-to ezkrg/bitlbee-libpurple:debian-cache --tag ezkrg/bitlbee-libpurple:debian-test --platform linux/amd64,linux/arm64,linux/armhf -f Dockerfile.debian $BUILD_ARGS .
    when:
      event:
      - push

  - name: latest
    image: ezkrg/buildx:latest
    environment:
      USER:
        from_secret: DHU
      PASSWORD:
        from_secret: DHP
      DOCKER_HOST: tcp://docker:2375
    commands:
    - while ! docker info; do sleep 1; done
    - docker run --rm --privileged tonistiigi/binfmt --install all
    - docker buildx create --use --name docker --node docker --platform linux/amd64,linux/arm64,linux/armhf --driver docker-container $DOCKER_HOST
    - echo $PASSWORD | docker login --username $USER --password-stdin
    - apk add --update --no-cache bash
    - BUILD_ARGS=$(for BUILD_ARG in $(cat plugin_versions); do echo -n "--build-arg $BUILD_ARG "; done)
    - docker buildx build --push --cache-from ezkrg/bitlbee-libpurple:debian-cache --cache-to ezkrg/bitlbee-libpurple:debian-cache --tag ezkrg/bitlbee-libpurple:debian-$DRONE_TAG --tag ezkrg/bitlbee-libpurple:debian --platform linux/amd64,linux/arm64,linux/armhf -f Dockerfile.debian $BUILD_ARGS .
    when:
      event:
      - tag

---
kind: pipeline 
type: docker
name: notification

clone:
  disable: true

steps:
  - name: webhook
    image: plugins/webhook
    failure: ignore
    settings:
      urls:
        from_secret: WH_URL
      template: |
        {
          "text": "*{{build.author}}*\n*{{repo.owner}}/{{repo.name}}*\n[Pipeline #{{build.number}} has {{#success build.status}}passed{{else}}failed{{/success}} in {{since build.started}}]({{build.link}}) {{#success build.status}}✅{{else}}❌{{/success}}\n*Branch:* [{{build.branch}}](https://github.com/{{repo.owner}}/{{repo.name}}/commits/{{build.branch}}) *Commit:* [{{build.message}}](https://github.com/{{repo.owner}}/{{repo.name}}/commit/{{build.commit}})"
        }

trigger:
  status:
    - success
    - failure

depends_on:
  - alpine
  - alpine3.12
  - debian

---
kind: signature
hmac: b474ad3dd059e916f18a49d053673fe8760f63c9d8343c0e7051e206524aba86

...
